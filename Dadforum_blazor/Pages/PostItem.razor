@page "/api/posts/{id}"

@using Dadforum_blazor.Data;
@using shared.Model;
@inject ApiService apiService

<PageTitle>Dadforum Tråd</PageTitle>

<style>
    div.post
    {
        position: relative;
        padding: 5px;       
        width: 1400px;
        font-size: x-large;
        background-color: beige;
        border: solid;
        border-color: black;
        border-radius: 5px;¨
        font-size: 20px;
    }
    div.kommentarer
    {
        position: relative;
        padding: 10px;
        width: 1400px;
        background-color: beige;
        border: solid;
        border-color: black;
        border-radius: 5px;
    }
    div.postComment
    {
        position: static;
        padding: 5px;
        width: 1400px;
        background-color: beige;
        border: solid;
        border-color: black;
        border-radius: 5px;
    }

</style>


@if (Post == null)
{
    <p><em>Loading...</em></p>
}
else 
{
    <div class="post">
        <p>Author - @Post.NameOfAuthor</p>
        <p>Dato - @Post.DateOfSubmission</p>
        <p>Post - @Post.PostString</p>
        <p>Content - @Post.Content</p>
    </div>

    <br/>

    <div class="kommentarer">
        <h3>Comments</h3>
        
        <table>
            <tr>
                <th>Dato for kommentar</th>
                <th>Author</th>
                <th>Kommentar</th>
                <th>Upvotes</th>
                <th>Downvotes</th> 
            </tr>
            @foreach (var comment in Post.Comments)
            {
                <tr>
                    <td>@comment.DateOfComment</td>
                    <td>@comment.Author</td>
                    <td>@comment.CommentString</td>
                    <td>@comment.Upvotes</td>                 
                    <td>@comment.Downvotes</td>
                    <td><button @onclick="() => Upvote(comment.CommentID)"> Upvote</button></td>
                    <td><button @onclick="() => Downvote(comment.CommentID)"> Downvote</button></td>
                </tr>
            }     
        </table>
        </div>
    <br/>
    <div class="postComment">
        <CreateComment PostId=@PostId></CreateComment>
    </div>

}

@code   
{
    [Parameter]
    public string Id {get; set; }
    public int PostId { get { return int.Parse(Id);} }
    public Post Post { get; set; }
    private Post? voteComment;

    protected override async Task OnInitializedAsync()
    {
        Post = await apiService.GetPost(PostId);
    }

    private async void Upvote(int id)
    {
        var upvoteComment = await apiService.UpvoteComment(id);
    }
    private async void Downvote(int id)
    {
        var downvoteComment = await apiService.DownvoteComment(id);
    }
}